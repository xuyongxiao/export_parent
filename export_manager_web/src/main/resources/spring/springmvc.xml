<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!--配置springMVC创建容器时要扫描的包-->
    <context:component-scan base-package="com.itheima.web"></context:component-scan>

	<!--配置视图解析器-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!--配置自定义类型装换器，它采用使用注册服务的方式-->
	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<!--注入自定义类型转换器-->
		<property name="converters">
			<set>
				<bean id="stringToDateConverter" class="com.itheima.web.convertes.StringToDateConverter">
					<property name="pattern" value="yyyy-MM-dd"></property>
				</bean>
			</set>
		</property>
	</bean>

	<!--开启springMVC对注解的支持-->
	<mvc:annotation-driven conversion-service="conversionService"/>

	<!--开启注解aop的支持
	proxy-target-class代理的方式选择
	当是true是，表示创建目标类作为代理对象，选择cglib
	当是flase是，表示让spring自己选择使用何种代理方式
	spring会根据被代理对象是否实现了接口来判断是选择proxy还是cglib
	-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!--dubbo服务消费者的配置-->
	<!--配置dubbo想飞这加入到注册中心的名称-->
	<dubbo:application name="export_company_consumer">
		<!--      <dubbo:parameter key="qos.enable" value="false"></dubbo:parameter>  -->
	</dubbo:application>

	<!--配置注册中心的地址-->
	<dubbo:registry address="zookeeper://172.16.36.129:2181" timeout="5000"></dubbo:registry>

	<!--配置dubbo扫描注解的包-->
	<dubbo:annotation package="com.itheima.web" ></dubbo:annotation>

	<!--配置合理化检查
        需要先有提供者，然后才能消费
        当没有提供者时：
            开启合理化检查，消费者开启会报错。反之不开启合理化检查则不会报错
    -->
	<dubbo:consumer check="false"></dubbo:consumer>

	<!--配置文件解析器-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--上传文件大小限制-->
		<property name="maxUploadSize" value="10485760"></property>
	</bean>

</beans>